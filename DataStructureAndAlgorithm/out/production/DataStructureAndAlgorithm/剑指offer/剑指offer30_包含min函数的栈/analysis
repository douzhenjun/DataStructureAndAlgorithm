问题描述: 定义栈的数据结构, 在该类型中实现一个能够得到栈的最小元素的min函数. 在该栈中, 调用min, push及pop的时间复杂度都是O(1).


分析: 可以借助数组结构或链表结构实现栈. 以数组结构为例.
构造函数: 返回一个ArrayList
push: 入栈操作, 相当于调用add方法, 由于栈需要保证后进先出, 所以需要有一个指针指向列表的尾部, 相当于栈顶.
pop: 出栈操作, 相当于调用remove方法, 传入栈顶指针的值, 返回栈顶元素
peek: 获得栈顶元素, 相当于调用get方法
empty: 判断堆栈是否为空, 可以通过判断指针是否为-1(默认为-1, 每新增一个元素+1)
min: 得到栈的最小元素, 这需要栈维护一个当前最小的元素min, 每有新元素入栈, 就会和min进行比较, 决定保留或更新. 
当最小元素从栈顶移出时, 也需要删除这个min, 而把次小元素作为min. 所以我们需要一个辅助栈用来保存当前的最小元素, 这也是一个
栈结构, 当新元素入栈时, 辅助栈入栈最小值, 当旧元素出栈时, 辅助栈也执行出栈, 这样辅助栈的栈顶就是当前标准栈的最小元素.